@using ASPNETCoreDemo.ViewModels.Product
@model IEnumerable<ProductViewModel> 
@* We declare with @model the collection that is in the controller in the action so it can be used here in the view. *@
@{
	ViewData["Title"] = "All Products";
}

<div class="container-fluid">
	<div class="row">
			<form asp-controller="Product" asp-action="My-Products" method="get">

				<div class="input-group">
					<div class="form-outline">
						<input type="search" id="keyword" name="keyword" class="form-control" />
						<label class="form-label" for="keyword"></label>
						<button class="btn btn-primary" type="submit"><i class="fa fa-search fa-fw"></i> Search</button>
					</div>
				</div>
			</form>
		</div>
	<div class="row" style="margin-top: 5px">
		<div class="card" style="width: 18rem;">
			<div class="card-header">@ViewData["Title"]</div>
			<ul class="list-group list-group-flush">
				@foreach (var product in Model)
				{
					<li class="list-group-item"> 
						N.@product.Id: @product.Name - @product.Price lv.
					</li>
				}
			</ul>	
		</div>
		<a class="btn btn-info" type="button" asp-controller="Product" asp-action="AllAsTextFile" style="margin-top: 5px"> Download Products</a>
	</div>	
</div>
